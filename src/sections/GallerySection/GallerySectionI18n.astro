---
import "./GallerySection.scss";
import VideoPlayer from "../../components/VideoPlayer/VideoPlayer.astro";
import { getTranslations } from "../../utils/i18n";
import fs from "fs";
import path from "path";

const { locale } = Astro.props;
const t = getTranslations(locale);

interface MediaItem {
    src: string;
    alt: string;
    type: "image" | "video";
    category: string;
    description: string;
    eventType?: string;
    dateCreated?: string;
}

interface GalleryCategory {
    id: string;
    name: string;
    displayName: string;
    description: string;
    seoDescription: string;
    itemType: string;
}

function getFilesFromDirectory(
    dirPath: string,
    extensions: string[],
): string[] {
    try {
        const fullPath = path.join(process.cwd(), "public", dirPath);
        if (!fs.existsSync(fullPath)) {
            return [];
        }

        const files = fs.readdirSync(fullPath);
        return files
            .filter((file) => {
                const ext = path.extname(file).toLowerCase();
                return extensions.includes(ext);
            })
            .map((file) => `/${dirPath}/${file}`);
    } catch (error) {
        console.error(`Error reading directory ${dirPath}:`, error);
        return [];
    }
}

const imageExtensions = [".png", ".jpg", ".jpeg", ".webp", ".gif"];
const videoExtensions = [".mp4", ".webm", ".mov", ".avi"];

function getFilesFromSubdirectories(
    basePath: string,
    subdirs: string[],
    extensions: string[],
): string[] {
    const allFiles: string[] = [];

    subdirs.forEach((subdir) => {
        const files = getFilesFromDirectory(
            `${basePath}/${subdir}`,
            extensions,
        );
        allFiles.push(...files);
    });

    return allFiles;
}

const eventSubdirs = [
    "stendup",
    "weddings",
    "corporate-events",
    "private-events",
];

const galleryImages = getFilesFromSubdirectories(
    "gallery",
    eventSubdirs,
    imageExtensions,
);
const videoFiles = getFilesFromDirectory("videos", videoExtensions);
const standupImages = getFilesFromDirectory("standup", imageExtensions);
const standupVideos = getFilesFromDirectory("standup", videoExtensions);

const categories: GalleryCategory[] = [
    {
        id: "gallery",
        name: t.gallery.categories.gallery,
        displayName: t.gallery.displayNames.gallery,
        description: t.gallery.descriptions.gallery,
        seoDescription: t.gallery.seoDescriptions.gallery,
        itemType: "ImageGallery",
    },
    {
        id: "videos",
        name: t.gallery.categories.videos,
        displayName: t.gallery.displayNames.videos,
        description: t.gallery.descriptions.videos,
        seoDescription: t.gallery.seoDescriptions.videos,
        itemType: "VideoGallery",
    },
    {
        id: "standup",
        name: t.gallery.categories.standup,
        displayName: t.gallery.displayNames.standup,
        description: t.gallery.descriptions.standup,
        seoDescription: t.gallery.seoDescriptions.standup,
        itemType: "Comedy",
    },
];

const galleryData = {
    gallery: galleryImages.map((src, index) => ({
        src,
        alt: t.gallery.altTexts.eventPhoto.replace('{0}', (index + 1).toString()),
        type: "image" as const,
        category: "gallery",
        description: t.gallery.mediaDescriptions.eventPhoto,
        eventType: t.gallery.eventTypes.corporate,
        dateCreated: new Date().toISOString(),
    })),
    videos: videoFiles.map((src, index) => ({
        src,
        alt: t.gallery.altTexts.eventVideo.replace('{0}', (index + 1).toString()),
        type: "video" as const,
        category: "videos",
        description: t.gallery.mediaDescriptions.eventVideo,
        eventType: t.gallery.eventTypes.general,
        dateCreated: new Date().toISOString(),
    })),
    standup: [
        ...standupImages.map((src, index) => ({
            src,
            alt: t.gallery.altTexts.standupPhoto.replace('{0}', (index + 1).toString()),
            type: "image" as const,
            category: "standup",
            description: t.gallery.mediaDescriptions.standupPhoto,
            eventType: t.gallery.eventTypes.standup,
            dateCreated: new Date().toISOString(),
        })),
        ...standupVideos.map((src, index) => ({
            src,
            alt: t.gallery.altTexts.standupVideo.replace('{0}', (index + 1).toString()),
            type: "video" as const,
            category: "standup",
            description: t.gallery.mediaDescriptions.standupVideo,
            eventType: t.gallery.eventTypes.standup,
            dateCreated: new Date().toISOString(),
        })),
    ],
};
---

<section
    class="gallery"
    itemscope
    itemtype="https://schema.org/Person"
    role="region"
    aria-label={t.gallery.ariaLabels.portfolio}
>
    <div class="container">
        <div class="content">
            <!-- Left side - Navigation -->
            <nav
                class="nav-section"
                role="navigation"
                aria-label={t.gallery.ariaLabels.navigation}
            >
                <div
                    class="nav-group"
                    itemscope
                    itemtype="https://schema.org/SiteNavigationElement"
                >
                    {
                        categories.map((category) => (
                            <button
                                class={`nav-item ${category.id === "gallery" ? "nav-item--active" : ""}`}
                                data-section={category.id}
                                aria-controls={`${category.id}-content`}
                                aria-expanded={
                                    category.id === "gallery" ? "true" : "false"
                                }
                                title={category.seoDescription}
                                itemprop="name"
                            >
                                {category.name}
                            </button>
                        ))
                    }
                </div>
            </nav>

            <main class="images-section">
                <!-- Gallery Section -->
                <section
                    id="gallery-content"
                    class="content-section content-section--active"
                    itemscope
                    itemtype="https://schema.org/ImageGallery"
                    aria-labelledby="gallery-heading"
                    role="tabpanel"
                >
                    <h2 id="gallery-heading" class="sr-only">
                        {t.gallery.headings.gallery}
                    </h2>
                    <meta
                        itemprop="name"
                        content={t.gallery.schema.portfolioName}
                    />
                    <meta
                        itemprop="description"
                        content={categories[0].seoDescription}
                    />
                    <meta itemprop="creator" content={t.gallery.schema.creator} />

                    <div class="media-grid" role="grid" aria-label={t.gallery.ariaLabels.grid}>
                        {
                            galleryData.gallery
                                .slice(0, 6)
                                .map((item, index) => (
                                    <figure
                                        class="media-item"
                                        itemprop="associatedMedia"
                                        itemscope
                                        itemtype="https://schema.org/ImageObject"
                                        role="gridcell"
                                    >
                                        <img
                                            src={item.src}
                                            alt={item.alt}
                                            class="media grayscale"
                                            loading="lazy"
                                            itemprop="contentUrl"
                                            width="400"
                                            height="300"
                                        />
                                        <meta
                                            itemprop="description"
                                            content={item.description}
                                        />
                                        <meta
                                            itemprop="creator"
                                            content={t.gallery.schema.creator}
                                        />
                                        <meta
                                            itemprop="copyrightHolder"
                                            content={t.gallery.schema.creator}
                                        />
                                        <meta
                                            itemprop="dateCreated"
                                            content={item.dateCreated}
                                        />
                                    </figure>
                                ))
                        }
                    </div>

                    <div class="view-all-container">
                        <a
                            href="/gallery/all"
                            class="view-all-btn"
                            id="gallery-link"
                        >
                            {t.gallery.viewAll}
                            <svg
                                width="20"
                                height="20"
                                viewBox="0 0 24 24"
                                fill="none"
                                xmlns="http://www.w3.org/2000/svg"
                            >
                                <path
                                    d="M7 17L17 7"
                                    stroke="currentColor"
                                    stroke-width="2"
                                    stroke-linecap="round"
                                    stroke-linejoin="round"></path>
                                <path
                                    d="M7 7H17V17"
                                    stroke="currentColor"
                                    stroke-width="2"
                                    stroke-linecap="round"
                                    stroke-linejoin="round"></path>
                            </svg>
                        </a>
                    </div>
                </section>

                <!-- Videos Section -->
                <section
                    id="videos-content"
                    class="content-section"
                    itemscope
                    itemtype="https://schema.org/VideoGallery"
                    aria-labelledby="videos-heading"
                    role="tabpanel"
                >
                    <h2 id="videos-heading" class="sr-only">
                        {t.gallery.headings.videos}
                    </h2>
                    <meta
                        itemprop="name"
                        content={t.gallery.schema.videoPortfolioName}
                    />
                    <meta
                        itemprop="description"
                        content={categories[1].seoDescription}
                    />
                    <meta itemprop="creator" content={t.gallery.schema.creator} />

                    <div class="media-grid" role="grid" aria-label={t.gallery.ariaLabels.grid}>
                        {
                            galleryData.videos
                                .slice(0, 6)
                                .map((item, index) => (
                                    <figure
                                        class="media-item"
                                        itemprop="associatedMedia"
                                        itemscope
                                        itemtype="https://schema.org/VideoObject"
                                        role="gridcell"
                                    >
                                        <VideoPlayer
                                            src={item.src}
                                            alt={item.alt}
                                            className="media"
                                            itemprop="contentUrl"
                                        />
                                        <meta
                                            itemprop="name"
                                            content={item.alt}
                                        />
                                        <meta
                                            itemprop="description"
                                            content={item.description}
                                        />
                                        <meta
                                            itemprop="creator"
                                            content={t.gallery.schema.creator}
                                        />
                                        <meta
                                            itemprop="uploadDate"
                                            content={item.dateCreated}
                                        />
                                    </figure>
                                ))
                        }
                    </div>

                    <div class="view-all-container">
                        <a
                            href="/gallery/videos"
                            class="view-all-btn"
                            id="videos-link"
                        >
                            {t.gallery.viewAll}
                            <svg
                                width="20"
                                height="20"
                                viewBox="0 0 24 24"
                                fill="none"
                                xmlns="http://www.w3.org/2000/svg"
                            >
                                <path
                                    d="M7 17L17 7"
                                    stroke="currentColor"
                                    stroke-width="2"
                                    stroke-linecap="round"
                                    stroke-linejoin="round"></path>
                                <path
                                    d="M7 7H17V17"
                                    stroke="currentColor"
                                    stroke-width="2"
                                    stroke-linecap="round"
                                    stroke-linejoin="round"></path>
                            </svg>
                        </a>
                    </div>
                </section>

                <!-- Standup Section -->
                <section
                    id="standup-content"
                    class="content-section"
                    itemscope
                    itemtype="https://schema.org/MediaGallery"
                    aria-labelledby="standup-heading"
                    role="tabpanel"
                >
                    <h2 id="standup-heading" class="sr-only">
                        {t.gallery.headings.standup}
                    </h2>
                    <meta itemprop="name" content={t.gallery.schema.standupName} />
                    <meta
                        itemprop="description"
                        content={categories[2].seoDescription}
                    />
                    <meta itemprop="creator" content={t.gallery.schema.creator} />

                    <div class="media-grid" role="grid" aria-label={t.gallery.ariaLabels.grid}>
                        {
                            galleryData.standup
                                .slice(0, 6)
                                .map((item, index) => (
                                    <figure
                                        class="media-item"
                                        itemprop="associatedMedia"
                                        itemscope
                                        itemtype={
                                            item.type === "video"
                                                ? "https://schema.org/VideoObject"
                                                : "https://schema.org/ImageObject"
                                        }
                                        role="gridcell"
                                    >
                                        {item.type === "video" ? (
                                            <VideoPlayer
                                                src={item.src}
                                                alt={item.alt}
                                                className="media"
                                                itemprop="contentUrl"
                                            />
                                        ) : (
                                            <img
                                                src={item.src}
                                                alt={item.alt}
                                                class="media grayscale"
                                                loading="lazy"
                                                itemprop="contentUrl"
                                                width="400"
                                                height="300"
                                            />
                                        )}
                                        <meta
                                            itemprop="name"
                                            content={item.alt}
                                        />
                                        <meta
                                            itemprop="description"
                                            content={item.description}
                                        />
                                        <meta
                                            itemprop="creator"
                                            content={t.gallery.schema.creator}
                                        />
                                        <meta
                                            itemprop="genre"
                                            content={t.gallery.schema.genre}
                                        />
                                        <meta
                                            itemprop="dateCreated"
                                            content={item.dateCreated}
                                        />
                                    </figure>
                                ))
                        }
                    </div>

                    <div class="view-all-container">
                        <a
                            href="/gallery/standup"
                            class="view-all-btn"
                            id="standup-link"
                        >
                            {t.gallery.viewAll}
                            <svg
                                width="20"
                                height="20"
                                viewBox="0 0 24 24"
                                fill="none"
                                xmlns="http://www.w3.org/2000/svg"
                            >
                                <path
                                    d="M7 17L17 7"
                                    stroke="currentColor"
                                    stroke-width="2"
                                    stroke-linecap="round"
                                    stroke-linejoin="round"></path>
                                <path
                                    d="M7 7H17V17"
                                    stroke="currentColor"
                                    stroke-width="2"
                                    stroke-linecap="round"
                                    stroke-linejoin="round"></path>
                            </svg>
                        </a>
                    </div>
                </section>
            </main>
        </div>
    </div>

    <!-- JSON-LD структурированные данные для портфолио -->
    <script type="application/ld+json" is:inline set:html={JSON.stringify({
        "@context": "https://schema.org",
        "@type": "Person",
        "name": t.gallery.schema.creator,
        "jobTitle": t.hero.metaJobTitle,
        "hasCredential": [
            {
                "@type": "EducationalOccupationalCredential",
                "name": t.gallery.schema.credentials.photos.name,
                "description": t.gallery.schema.credentials.photos.description,
                "credentialCategory": t.gallery.schema.credentials.photos.category
            },
            {
                "@type": "EducationalOccupationalCredential",
                "name": t.gallery.schema.credentials.videos.name,
                "description": t.gallery.schema.credentials.videos.description,
                "credentialCategory": t.gallery.schema.credentials.videos.category
            },
            {
                "@type": "EducationalOccupationalCredential",
                "name": t.gallery.schema.credentials.standup.name,
                "description": t.gallery.schema.credentials.standup.description,
                "credentialCategory": t.gallery.schema.credentials.standup.category
            }
        ],
        "workExample": [
            {
                "@type": "CreativeWork",
                "name": t.gallery.schema.workExamples.events.name,
                "description": t.gallery.schema.workExamples.events.description,
                "genre": t.gallery.schema.workExamples.events.genre,
                "creator": {
                    "@type": "Person",
                    "name": t.gallery.schema.creator
                }
            },
            {
                "@type": "CreativeWork",
                "name": t.gallery.schema.workExamples.standup.name,
                "description": t.gallery.schema.workExamples.standup.description,
                "genre": t.gallery.schema.workExamples.standup.genre,
                "creator": {
                    "@type": "Person",
                    "name": t.gallery.schema.creator
                }
            }
        ]
    })}>
    </script>

    <!-- Hidden CSS for screen readers -->
    <style>
        .sr-only {
            position: absolute;
            width: 1px;
            height: 1px;
            padding: 0;
            margin: -1px;
            overflow: hidden;
            clip: rect(0, 0, 0, 0);
            border: 0;
        }
    </style>
</section>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const navButtons =
            document.querySelectorAll<HTMLButtonElement>(".nav-item");
        const contentSections =
            document.querySelectorAll<HTMLDivElement>(".content-section");

        const sectionUrls = {
            gallery: "/gallery/weddings",
            videos: "/gallery/videos",
            standup: "/gallery/standup",
        };

        navButtons.forEach((button) => {
            button.addEventListener(
                "click",
                function (this: HTMLButtonElement) {
                    const targetSection = this.getAttribute("data-section");

                    navButtons.forEach((btn) =>
                        btn.classList.remove("nav-item--active"),
                    );
                    contentSections.forEach((section) =>
                        section.classList.remove("content-section--active"),
                    );

                    this.classList.add("nav-item--active");
                    const targetContent = document.getElementById(
                        targetSection + "-content",
                    );
                    if (targetContent) {
                        targetContent.classList.add("content-section--active");
                    }

                    const currentViewAllBtn = targetContent?.querySelector(
                        ".view-all-btn",
                    ) as HTMLAnchorElement;
                    if (
                        currentViewAllBtn &&
                        targetSection &&
                        sectionUrls[targetSection as keyof typeof sectionUrls]
                    ) {
                        currentViewAllBtn.href =
                            sectionUrls[
                                targetSection as keyof typeof sectionUrls
                            ];
                    }
                },
            );
        });
    });
</script>
